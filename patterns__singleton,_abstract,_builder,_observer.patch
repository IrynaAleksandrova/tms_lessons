Index: lessons28_29/src/main/java/org/example/abstract_method/LadaBodyServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/LadaBodyServiceImpl.java b/lessons28_29/src/main/java/org/example/abstract_method/LadaBodyServiceImpl.java
new file mode 100644
--- /dev/null	(date 1673698897126)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/LadaBodyServiceImpl.java	(date 1673698897126)
@@ -0,0 +1,8 @@
+package org.example.abstract_method;
+
+public class LadaBodyServiceImpl implements BodyService {
+    @Override
+    public Body createBody() {
+        return new Body("Lada body");
+    }
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/BMWBodyServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/BMWBodyServiceImpl.java b/lessons28_29/src/main/java/org/example/abstract_method/BMWBodyServiceImpl.java
new file mode 100644
--- /dev/null	(date 1673698897103)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/BMWBodyServiceImpl.java	(date 1673698897103)
@@ -0,0 +1,8 @@
+package org.example.abstract_method;
+
+public class BMWBodyServiceImpl implements BodyService {
+    @Override
+    public Body createBody() {
+        return new Body("BMW body");
+    }
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/Service.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/Service.java b/lessons28_29/src/main/java/org/example/abstract_method/Service.java
new file mode 100644
--- /dev/null	(date 1673700090443)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/Service.java	(date 1673700090443)
@@ -0,0 +1,18 @@
+package org.example.abstract_method;
+
+public class Service {
+    public void createCar(AbstractFactory factory){
+
+        EngineService engineService = factory.getEngineService();
+        Engine engine = engineService.createEngine();
+        System.out.println(engine);
+
+        BodyService bodyService = factory.getBodyService();
+        Body body = bodyService.createBody();
+        System.out.println(body);
+
+        WheelService wheelService = factory.getWheelService();
+        Wheel wheel = wheelService.createWheel();
+        System.out.println(wheel);
+    }
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/AbstractFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/AbstractFactory.java b/lessons28_29/src/main/java/org/example/abstract_method/AbstractFactory.java
new file mode 100644
--- /dev/null	(date 1673699713586)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/AbstractFactory.java	(date 1673699713586)
@@ -0,0 +1,11 @@
+package org.example.abstract_method;
+
+public interface AbstractFactory {
+
+    EngineService getEngineService();
+
+    BodyService getBodyService();
+
+    WheelService getWheelService();
+
+}
Index: lessons28_29/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/build.gradle b/lessons28_29/build.gradle
new file mode 100644
--- /dev/null	(date 1673693338257)
+++ b/lessons28_29/build.gradle	(date 1673693338257)
@@ -0,0 +1,22 @@
+plugins {
+    id 'java'
+}
+
+group 'org.example'
+version '0.1'
+
+repositories {
+    mavenCentral()
+}
+
+dependencies {
+    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
+    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
+
+    compileOnly 'org.projectlombok:lombok:1.18.24'
+    annotationProcessor 'org.projectlombok:lombok:1.18.24'
+}
+
+test {
+    useJUnitPlatform()
+}
\ No newline at end of file
Index: lessons28_29/src/main/java/org/example/abstract_method/AudiAbstractFactoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/AudiAbstractFactoryImpl.java b/lessons28_29/src/main/java/org/example/abstract_method/AudiAbstractFactoryImpl.java
new file mode 100644
--- /dev/null	(date 1673699978519)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/AudiAbstractFactoryImpl.java	(date 1673699978519)
@@ -0,0 +1,18 @@
+package org.example.abstract_method;
+
+public class AudiAbstractFactoryImpl implements AbstractFactory {
+    @Override
+    public EngineService getEngineService() {
+        return new AudiEngineServiceImpl();
+    }
+
+    @Override
+    public BodyService getBodyService() {
+        return new BMWBodyServiceImpl();
+    }
+
+    @Override
+    public WheelService getWheelService() {
+        return new AudiWheelServiceImpl();
+    }
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/BMWAbstractFactoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/BMWAbstractFactoryImpl.java b/lessons28_29/src/main/java/org/example/abstract_method/BMWAbstractFactoryImpl.java
new file mode 100644
--- /dev/null	(date 1673699978500)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/BMWAbstractFactoryImpl.java	(date 1673699978500)
@@ -0,0 +1,18 @@
+package org.example.abstract_method;
+
+public class BMWAbstractFactoryImpl implements AbstractFactory {
+    @Override
+    public EngineService getEngineService() {
+        return new BMWEngineServiceImpl();
+    }
+
+    @Override
+    public BodyService getBodyService() {
+        return new BMWBodyServiceImpl();
+    }
+
+    @Override
+    public WheelService getWheelService() {
+        return new BMWWheelServiceImpl();
+    }
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/LadaAbstractFactoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/LadaAbstractFactoryImpl.java b/lessons28_29/src/main/java/org/example/abstract_method/LadaAbstractFactoryImpl.java
new file mode 100644
--- /dev/null	(date 1673699978468)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/LadaAbstractFactoryImpl.java	(date 1673699978468)
@@ -0,0 +1,17 @@
+package org.example.abstract_method;
+
+public class LadaAbstractFactoryImpl implements AbstractFactory {
+    @Override
+    public EngineService getEngineService() {
+        return new LadaEngineServiceImpl();}
+
+    @Override
+    public BodyService getBodyService() {
+        return new LadaBodyServiceImpl();
+    }
+
+    @Override
+    public WheelService getWheelService() {
+        return new AudiWheelServiceImpl();
+    }
+}
Index: lessons28_29/src/main/java/org/example/singleton/SingletonLazyLoaded.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/singleton/SingletonLazyLoaded.java b/lessons28_29/src/main/java/org/example/singleton/SingletonLazyLoaded.java
new file mode 100644
--- /dev/null	(date 1673706290060)
+++ b/lessons28_29/src/main/java/org/example/singleton/SingletonLazyLoaded.java	(date 1673706290060)
@@ -0,0 +1,24 @@
+package org.example.singleton;
+
+import lombok.ToString;
+
+@ToString
+public class SingletonLazyLoaded {
+    private static SingletonLazyLoaded instance;
+
+    private SingletonLazyLoaded() {
+        String text = "Hello, I'm Singleton";
+        System.out.println(text);
+    }
+
+    public static SingletonLazyLoaded getInstance() {
+        if (instance == null) {
+            synchronized (SingletonLazyLoaded.class) {
+                if (instance == null) {
+                    instance = new SingletonLazyLoaded();
+                }
+            }
+        }
+        return instance;
+    }
+}
Index: lessons28_29/src/main/java/org/example/singleton/MainSingleton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/singleton/MainSingleton.java b/lessons28_29/src/main/java/org/example/singleton/MainSingleton.java
new file mode 100644
--- /dev/null	(date 1673706595322)
+++ b/lessons28_29/src/main/java/org/example/singleton/MainSingleton.java	(date 1673706595322)
@@ -0,0 +1,17 @@
+package org.example.singleton;
+
+public class MainSingleton {
+
+    public static void main(String[] args) {
+
+        SingletonLazyLoaded x = SingletonLazyLoaded.getInstance();
+        SingletonLazyLoaded y = SingletonLazyLoaded.getInstance();
+        SingletonLazyLoaded z = SingletonLazyLoaded.getInstance();
+
+        System.out.println("String from x " + x);
+        System.out.println("String from y " + y);
+        System.out.println("String from z " + z);
+
+    }
+
+}
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle b/settings.gradle
--- a/settings.gradle	(revision 13877734ce8944e457979d4bfdce8a3d1a14e575)
+++ b/settings.gradle	(date 1673693282227)
@@ -3,4 +3,5 @@
 include 'lesson23'
 include 'lessons24_25'
 include 'lessons26_27'
+include 'lessons28_29'
 
Index: lessons28_29/src/main/java/org/example/singleton/MainSingletonSecond.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/singleton/MainSingletonSecond.java b/lessons28_29/src/main/java/org/example/singleton/MainSingletonSecond.java
new file mode 100644
--- /dev/null	(date 1673706595336)
+++ b/lessons28_29/src/main/java/org/example/singleton/MainSingletonSecond.java	(date 1673706595336)
@@ -0,0 +1,15 @@
+package org.example.singleton;
+
+public class MainSingletonSecond {
+    public static void main(String[] args) {
+
+        SingletonLazyLoaded q = SingletonLazyLoaded.getInstance();
+        SingletonLazyLoaded w = SingletonLazyLoaded.getInstance();
+        SingletonLazyLoaded e = SingletonLazyLoaded.getInstance();
+
+        System.out.println("String from q " + q);
+        System.out.println("String from w " + w);
+        System.out.println("String from e " + e);
+
+    }
+}
Index: lessons28_29/src/main/java/org/example/obsrever/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/obsrever/User.java b/lessons28_29/src/main/java/org/example/obsrever/User.java
new file mode 100644
--- /dev/null	(date 1673717639914)
+++ b/lessons28_29/src/main/java/org/example/obsrever/User.java	(date 1673717639914)
@@ -0,0 +1,14 @@
+package org.example.obsrever;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class User {
+
+    String name;
+    String category;
+}
Index: lessons28_29/src/main/java/org/example/obsrever/CreateService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/obsrever/CreateService.java b/lessons28_29/src/main/java/org/example/obsrever/CreateService.java
new file mode 100644
--- /dev/null	(date 1673718340160)
+++ b/lessons28_29/src/main/java/org/example/obsrever/CreateService.java	(date 1673718340160)
@@ -0,0 +1,17 @@
+package org.example.obsrever;
+
+import java.util.Observable;
+
+public class CreateService extends Observable implements UserService{
+
+    private String serviceName = "create";
+    public void createPerson(User user) {
+        System.out.println("New message: ");
+        setChanged();                        // произойдут изменения
+        notifyObservers(user);               // оповещать всех подписчиков
+    }
+
+    public String getServiceName() {
+        return serviceName;
+    }
+}
Index: lessons28_29/src/main/java/org/example/obsrever/Security.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/obsrever/Security.java b/lessons28_29/src/main/java/org/example/obsrever/Security.java
new file mode 100644
--- /dev/null	(date 1673718208725)
+++ b/lessons28_29/src/main/java/org/example/obsrever/Security.java	(date 1673718208725)
@@ -0,0 +1,20 @@
+package org.example.obsrever;
+
+import java.util.Observable;
+import java.util.Observer;
+
+public class Security implements Observer {
+    @Override
+    public void update(Observable o, Object arg) {
+
+        UserService service = (UserService) o;
+        User user1 = (User) arg;
+        System.out.println("This is security");
+
+        if (service.getServiceName().equals("create")) {
+            System.out.println("Prepare id card for " + user1.getName() + "; " + user1.getCategory());
+        } else if (service.getServiceName().equals("delete")) {
+            System.out.println("Delete id card for " + user1.getName() + "; " + user1.getCategory());
+        }
+    }
+}
Index: lessons28_29/src/main/java/org/example/obsrever/Salary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/obsrever/Salary.java b/lessons28_29/src/main/java/org/example/obsrever/Salary.java
new file mode 100644
--- /dev/null	(date 1673718208709)
+++ b/lessons28_29/src/main/java/org/example/obsrever/Salary.java	(date 1673718208709)
@@ -0,0 +1,21 @@
+package org.example.obsrever;
+
+import java.util.Observable;
+import java.util.Observer;
+
+public class Salary implements Observer {
+    @Override
+    public void update(Observable o, Object arg) {
+
+        UserService service = (UserService) o;
+        User user1 = (User) arg;
+        System.out.println("This is salary");
+
+        if (service.getServiceName().equals("create")) {
+            System.out.println("Prepare salary bill for " + user1.getName() + "; " + user1.getCategory());
+        } else if (service.getServiceName().equals("delete")) {
+            System.out.println("Delete salary bill for " + user1.getName() + "; " + user1.getCategory());
+        }
+
+    }
+}
Index: lessons28_29/src/main/java/org/example/obsrever/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/obsrever/App.java b/lessons28_29/src/main/java/org/example/obsrever/App.java
new file mode 100644
--- /dev/null	(date 1673718146522)
+++ b/lessons28_29/src/main/java/org/example/obsrever/App.java	(date 1673718146522)
@@ -0,0 +1,23 @@
+package org.example.obsrever;
+
+public class App {
+    public static void main(String[] args) {
+
+        CreateService createService = new CreateService();
+        DeleteService deleteService = new DeleteService();
+
+        createService.addObserver(new Security());            // регистрируем для рассылки новых пользователей
+        createService.addObserver(new Salary());
+        createService.addObserver(new Admin());
+
+        createService.createPerson(new User("Mike", "programmer"));
+        System.out.println("---------");
+        createService.createPerson(new User("Brad", "cleaner"));
+        System.out.println("---------");
+        deleteService.addObserver(new Admin());
+        deleteService.deletePerson(new User("Brad", "cleaner"));
+        System.out.println("---------");
+
+
+    }
+}
Index: lessons28_29/src/main/java/org/example/obsrever/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/obsrever/Admin.java b/lessons28_29/src/main/java/org/example/obsrever/Admin.java
new file mode 100644
--- /dev/null	(date 1673718208741)
+++ b/lessons28_29/src/main/java/org/example/obsrever/Admin.java	(date 1673718208741)
@@ -0,0 +1,21 @@
+package org.example.obsrever;
+
+import java.util.Observable;
+import java.util.Observer;
+
+public class Admin implements Observer {
+    @Override
+    public void update(Observable o, Object arg) {
+
+        UserService service = (UserService) o;
+        User user1 = (User) arg;
+        System.out.println("This is admin");
+
+        if (service.getServiceName().equals("create")) {
+            System.out.println("Prepare comp for " + user1.getName() + "; " + user1.getCategory());
+        } else if (service.getServiceName().equals("delete")) {
+            System.out.println("Delete comp for " + user1.getName() + "; " + user1.getCategory());
+        }
+
+    }
+}
Index: lessons28_29/src/main/java/org/example/obsrever/DeleteService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/obsrever/DeleteService.java b/lessons28_29/src/main/java/org/example/obsrever/DeleteService.java
new file mode 100644
--- /dev/null	(date 1673718738403)
+++ b/lessons28_29/src/main/java/org/example/obsrever/DeleteService.java	(date 1673718738403)
@@ -0,0 +1,18 @@
+package org.example.obsrever;
+
+import java.util.Observable;
+
+public class DeleteService extends Observable implements UserService{
+
+    private String serviceName = "delete";
+
+    public void deletePerson(User user) {
+        System.out.println("New message: ");
+        setChanged();                        // произойдут изменения
+        notifyObservers(user);               // оповещать всех подписчиков
+    }
+
+    public String getServiceName() {
+        return serviceName;
+    }
+}
Index: lessons28_29/src/main/java/org/example/obsrever/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/obsrever/UserService.java b/lessons28_29/src/main/java/org/example/obsrever/UserService.java
new file mode 100644
--- /dev/null	(date 1673712659370)
+++ b/lessons28_29/src/main/java/org/example/obsrever/UserService.java	(date 1673712659370)
@@ -0,0 +1,7 @@
+package org.example.obsrever;
+
+public interface UserService {
+
+    String getServiceName();
+
+}
Index: lessons28_29/src/main/java/org/example/builder/Person.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/builder/Person.java b/lessons28_29/src/main/java/org/example/builder/Person.java
new file mode 100644
--- /dev/null	(date 1673697402598)
+++ b/lessons28_29/src/main/java/org/example/builder/Person.java	(date 1673697402598)
@@ -0,0 +1,20 @@
+package org.example.builder;
+
+import lombok.AllArgsConstructor;
+import lombok.Builder;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@Builder
+public class Person {
+
+    private String name;
+    private int age;
+    private int born;
+    private Category category;
+    private String type;
+
+}
Index: lessons28_29/src/main/java/org/example/builder/Twilight.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/builder/Twilight.java b/lessons28_29/src/main/java/org/example/builder/Twilight.java
new file mode 100644
--- /dev/null	(date 1673697288733)
+++ b/lessons28_29/src/main/java/org/example/builder/Twilight.java	(date 1673697288733)
@@ -0,0 +1,40 @@
+package org.example.builder;
+
+public class Twilight {
+    public static void main(String[] args) {
+
+        Person edward = Person.builder()
+                .name("Edward")
+                .age(104)
+                .born(1901)
+                .category(Category.builder()
+                        .vampire("vampire")
+                        .build())
+                .type("immortal")
+                .build();
+
+        Person bella = Person.builder()
+                .name("Bella")
+                .age(17)
+                .born(1987)
+                .category(Category.builder()
+                        .human("human")
+                        .build())
+                .type("mortal")
+                .build();
+
+        Person jacob = Person.builder()
+                .name("Jacob")
+                .age(15)
+                .born(1990)
+                .category(Category.builder()
+                        .werewolf("werewolf")
+                        .build())
+                .type("mortal")
+                .build();
+
+        System.out.println(edward);
+        System.out.println(bella);
+        System.out.println(jacob);
+    }
+}
Index: lessons28_29/src/main/java/org/example/builder/Category.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/builder/Category.java b/lessons28_29/src/main/java/org/example/builder/Category.java
new file mode 100644
--- /dev/null	(date 1673697375541)
+++ b/lessons28_29/src/main/java/org/example/builder/Category.java	(date 1673697375541)
@@ -0,0 +1,18 @@
+package org.example.builder;
+
+import lombok.AllArgsConstructor;
+import lombok.Builder;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@Builder
+public class Category {
+
+    private String human;
+    private String vampire;
+    private String werewolf;
+
+}
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 13877734ce8944e457979d4bfdce8a3d1a14e575)
+++ b/.idea/gradle.xml	(date 1673693293685)
@@ -13,6 +13,7 @@
             <option value="$PROJECT_DIR$/lesson23" />
             <option value="$PROJECT_DIR$/lessons24_25" />
             <option value="$PROJECT_DIR$/lessons26_27" />
+            <option value="$PROJECT_DIR$/lessons28_29" />
           </set>
         </option>
       </GradleProjectSettings>
Index: lessons28_29/src/main/java/org/example/abstract_method/Factory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/Factory.java b/lessons28_29/src/main/java/org/example/abstract_method/Factory.java
new file mode 100644
--- /dev/null	(date 1673700255592)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/Factory.java	(date 1673700255592)
@@ -0,0 +1,15 @@
+package org.example.abstract_method;
+
+public class Factory {
+
+    public static void main(String[] args) {
+
+        Service service = new Service();
+        service.createCar(new AudiAbstractFactoryImpl());
+        System.out.println();
+        service.createCar(new BMWAbstractFactoryImpl());
+        System.out.println();
+        service.createCar(new LadaAbstractFactoryImpl());
+        System.out.println();
+    }
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/WheelService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/WheelService.java b/lessons28_29/src/main/java/org/example/abstract_method/WheelService.java
new file mode 100644
--- /dev/null	(date 1673698371062)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/WheelService.java	(date 1673698371062)
@@ -0,0 +1,7 @@
+package org.example.abstract_method;
+
+public interface WheelService {
+
+    Wheel createWheel();
+
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/EngineService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/EngineService.java b/lessons28_29/src/main/java/org/example/abstract_method/EngineService.java
new file mode 100644
--- /dev/null	(date 1673698371018)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/EngineService.java	(date 1673698371018)
@@ -0,0 +1,7 @@
+package org.example.abstract_method;
+
+public interface EngineService {
+
+    Engine createEngine();
+
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/BodyService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/BodyService.java b/lessons28_29/src/main/java/org/example/abstract_method/BodyService.java
new file mode 100644
--- /dev/null	(date 1673698391996)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/BodyService.java	(date 1673698391996)
@@ -0,0 +1,7 @@
+package org.example.abstract_method;
+
+public interface BodyService {
+
+    Body createBody();
+
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/Wheel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/Wheel.java b/lessons28_29/src/main/java/org/example/abstract_method/Wheel.java
new file mode 100644
--- /dev/null	(date 1673698725860)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/Wheel.java	(date 1673698725860)
@@ -0,0 +1,12 @@
+package org.example.abstract_method;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class Wheel {
+    private String name;
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/Body.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/Body.java b/lessons28_29/src/main/java/org/example/abstract_method/Body.java
new file mode 100644
--- /dev/null	(date 1673698725876)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/Body.java	(date 1673698725876)
@@ -0,0 +1,12 @@
+package org.example.abstract_method;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class Body {
+    private String name;
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/Engine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/Engine.java b/lessons28_29/src/main/java/org/example/abstract_method/Engine.java
new file mode 100644
--- /dev/null	(date 1673698725827)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/Engine.java	(date 1673698725827)
@@ -0,0 +1,12 @@
+package org.example.abstract_method;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class Engine {
+    private String name;
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/AudiWheelServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/AudiWheelServiceImpl.java b/lessons28_29/src/main/java/org/example/abstract_method/AudiWheelServiceImpl.java
new file mode 100644
--- /dev/null	(date 1673698725844)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/AudiWheelServiceImpl.java	(date 1673698725844)
@@ -0,0 +1,8 @@
+package org.example.abstract_method;
+
+public class AudiWheelServiceImpl implements WheelService {
+    @Override
+    public Wheel createWheel() {
+        return new Wheel("Audi wheel");
+    }
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/BMWWheelServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/BMWWheelServiceImpl.java b/lessons28_29/src/main/java/org/example/abstract_method/BMWWheelServiceImpl.java
new file mode 100644
--- /dev/null	(date 1673698725810)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/BMWWheelServiceImpl.java	(date 1673698725810)
@@ -0,0 +1,8 @@
+package org.example.abstract_method;
+
+public class BMWWheelServiceImpl implements WheelService {
+    @Override
+    public Wheel createWheel() {
+        return new Wheel("BMW wheel");
+    }
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/AudiEngineServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/AudiEngineServiceImpl.java b/lessons28_29/src/main/java/org/example/abstract_method/AudiEngineServiceImpl.java
new file mode 100644
--- /dev/null	(date 1673698725918)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/AudiEngineServiceImpl.java	(date 1673698725918)
@@ -0,0 +1,8 @@
+package org.example.abstract_method;
+
+public class AudiEngineServiceImpl implements EngineService {
+    @Override
+    public Engine createEngine() {
+        return new Engine("Audi engine");
+    }
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/BMWEngineServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/BMWEngineServiceImpl.java b/lessons28_29/src/main/java/org/example/abstract_method/BMWEngineServiceImpl.java
new file mode 100644
--- /dev/null	(date 1673698725779)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/BMWEngineServiceImpl.java	(date 1673698725779)
@@ -0,0 +1,8 @@
+package org.example.abstract_method;
+
+public class BMWEngineServiceImpl implements EngineService {
+    @Override
+    public Engine createEngine() {
+        return new Engine("BMW engine");
+    }
+}
Index: lessons28_29/src/main/java/org/example/abstract_method/LadaEngineServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lessons28_29/src/main/java/org/example/abstract_method/LadaEngineServiceImpl.java b/lessons28_29/src/main/java/org/example/abstract_method/LadaEngineServiceImpl.java
new file mode 100644
--- /dev/null	(date 1673698725895)
+++ b/lessons28_29/src/main/java/org/example/abstract_method/LadaEngineServiceImpl.java	(date 1673698725895)
@@ -0,0 +1,8 @@
+package org.example.abstract_method;
+
+public class LadaEngineServiceImpl implements EngineService {
+    @Override
+    public Engine createEngine() {
+        return new Engine("Lada engine");
+    }
+}
